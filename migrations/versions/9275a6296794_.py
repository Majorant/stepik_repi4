"""empty message

Revision ID: 9275a6296794
Revises:
Create Date: 2020-11-20 17:23:07.260903

"""
import json
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '9275a6296794'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    goals = op.create_table('goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goal', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_name', sa.String(), nullable=False),
    sa.Column('client_phone', sa.String(), nullable=False),
    sa.Column('client_days', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    teachers = op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('about', sa.String(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('picture', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('free', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_name', sa.String(), nullable=False),
    sa.Column('client_phone', sa.String(), nullable=False),
    sa.Column('client_dow', sa.String(), nullable=False),
    sa.Column('client_time', sa.String(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    teachers_goals = op.create_table('teachers_goals',
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('goal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], )
    )
    # ### end Alembic commands ###
    with open('data.json', 'r') as jf:
        data = json.load(jf)
    bulk_list_goals = []
    bulk_list_teachers = []
    bulk_list_relations = []
    count_id = 1

    for goal, name in data['goals'].items():
        bulk_list_goals.append({'id': count_id, 'goal': goal, 'name': name})
        count_id += 1

    for t in data['teachers']:
        bulk_list_teachers.append({'id': t['id'] + 1,
                        'name': t['name'],
                        'about': t['about'],
                        'rating': t['rating'],
                        'picture': t['picture'],
                        'price': t['price'],
                        'free': json.dumps(t['free']),
        })
        for g in t['goals']:
            for goal in bulk_list_goals:
                if g in goal['goal']:
                    bulk_list_relations.append({'teacher_id': t['id'] + 1, 'goal_id': goal['id']})


    op.bulk_insert(goals, bulk_list_goals)
    op.bulk_insert(teachers, bulk_list_teachers)
    op.bulk_insert(teachers_goals, bulk_list_relations)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teachers_goals')
    op.drop_table('booking')
    op.drop_table('teachers')
    op.drop_table('requests')
    op.drop_table('goals')
    # ### end Alembic commands ###
